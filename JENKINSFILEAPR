node{  
     echo "job name is: ${env.JOB_NAME}"
      echo "BRANCH name is: ${env.BRANCH_NAME}"
    echo "build nUMBER is: ${env.BUILD_NUMBER}"
    echo "node name is: ${env.NODE_NAME}"
    echo "jenkins home dir is: ${env.JENKINS_NAME}"
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    def mavenHome = tool name: "maven3.9.0"
   try{
   stage('CheckOutCode')
{
    git branch: 'development', credentialsId: '8f076db4-62b4-48d7-9fdb-76d034b43a18', url: 'https://github.com/Amitkochrekar/maven-web-application.git'
}
stage('Build'){
    sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('ExecuteSonarQubeReport'){
    sh "${mavenHome}/bin/mvn sonar:sonar"
}
stage('UploadArtifactsToNexus'){
    sh "${mavenHome}/bin/mvn clean deploy"
}
stage('DeployAppToTomcatServer'){
    sshagent(['71bc1023-c664-416e-97b9-08910fa49d0a']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.36.129:/opt/apache-tomcat-9.0.73/webapps"
}
} */
}
catch(e){
currentBuild.result = "FAILED"
throw e
}
finally{
sendSlackNotifications(currentBuild.result)
}
} //NODE CLOSSING
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#axis-bank')
}
